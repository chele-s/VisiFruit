# ====================================================================
# CONFIGURACIÓN DEL SERVIDOR DE INFERENCIA IA - VISIFRUIT
# ====================================================================
# Copia este archivo como ".env" y ajusta los valores según tu setup

# ====================================================================
# MODELO DE IA - Selección de Arquitectura
# ====================================================================
# Opciones: "yolov8", "rtdetr", "rfdetr", "rfdetr_local", "roboflow"
# - yolov8: Ultrarrápido, ideal para tiempo real (RECOMENDADO por defecto)
# - rtdetr: Mayor precisión, basado en transformers (Ultralytics)
# - rfdetr: RF-DETR local con librería rfdetr (requiere pesos compatibles)
# - rfdetr_local: Carga checkpoint de RF-DETR de Roboflow directamente (USAR ESTE para modelos descargados de Roboflow)
# - roboflow: Roboflow Inference API (usa modelo vía API en la nube)
MODEL_TYPE=yolov8

# Ruta al modelo entrenado (archivo .pt)
# Para YOLOv8/RT-DETR: requerido, debe apuntar a tus pesos entrenados
# Para RF-DETR: opcional, si no existe usa checkpoint pre-entrenado de Roboflow COCO
MODEL_PATH=weights/best.pt

# RF-DETR: Variante del modelo (solo aplica si MODEL_TYPE=rfdetr)
# Opciones: "nano", "small", "medium", "base"
# - nano: Más rápido, menor precisión (~50-55 mAP)
# - small: Balanceado velocidad/precisión (~55-58 mAP)
# - medium: Mayor precisión (~58-60 mAP)
# - base: Máxima precisión SOTA (~60-62 mAP)
RFDETR_VARIANT=base

# ====================================================================
# ROBOFLOW INFERENCE API
# ====================================================================
# Solo aplica si MODEL_TYPE=roboflow
# Usa tu modelo RF-DETR entrenado en Roboflow vía API (RECOMENDADO)

# API Key de Roboflow (obtén en https://app.roboflow.com/settings/api)
ROBOFLOW_API_KEY=

# Project ID (lo ves en la URL de tu proyecto, ej: "visifruit-gpdwu")
ROBOFLOW_PROJECT_ID=

# Versión del modelo entrenado (normalmente "3", "2", "1", etc.)
ROBOFLOW_VERSION=3

# URL de la API (dejar por defecto)
ROBOFLOW_API_URL=https://detect.roboflow.com

# ====================================================================
# HARDWARE Y OPTIMIZACIÓN
# ====================================================================

# Device de inferencia: "cuda" (GPU) o "cpu"
# Si tienes GPU NVIDIA, usa "cuda" para mejor rendimiento
MODEL_DEVICE=cuda

# FP16 (Half precision): true/false
# Acelera inferencia en GPU (~2x más rápido) con mínima pérdida de precisión
# Solo funciona con MODEL_DEVICE=cuda
MODEL_FP16=true

# ====================================================================
# AUTENTICACIÓN Y SEGURIDAD
# ====================================================================
# Habilitar autenticación por token Bearer
AUTH_ENABLED=true

# Tokens válidos (separados por coma, sin espacios)
# Estos tokens se envían como: Authorization: Bearer <token>
AUTH_TOKENS=visifruittoken2025,debugtoken

# ====================================================================
# CONFIGURACIÓN DEL SERVIDOR
# ====================================================================
# Host del servidor (0.0.0.0 = todas las interfaces)
SERVER_HOST=0.0.0.0

# Puerto del servidor
SERVER_PORT=9000

# Número de workers (normalmente 1 es suficiente)
SERVER_WORKERS=1

# Rate limiting: máximo de requests por minuto
# 1800/minute = 30 FPS de tiempo real
RATE_LIMIT=1800/minute

# ====================================================================
# OPTIMIZACIÓN DE IMÁGENES
# ====================================================================
# Tamaño máximo de imagen (px) - se redimensiona si es mayor
MAX_IMAGE_SIZE=1920

# Calidad JPEG para compresión (1-100)
# 70 = buen balance entre calidad y tamaño
JPEG_QUALITY=70

# ====================================================================
# CACHE
# ====================================================================
# Habilitar cache de resultados
ENABLE_CACHE=true

# Tiempo de vida del cache (segundos)
CACHE_TTL=60

# ====================================================================
# VISUALIZACIÓN Y STREAMING
# ====================================================================
# Log de estadísticas cada N frames
LOG_EVERY_N_FRAMES=30

# Habilitar streaming MJPEG en vivo con bounding boxes
# Accesible en http://<IP>:9000/stream
ENABLE_MJPEG_STREAM=true

# FPS máximo del stream MJPEG (limita ancho de banda)
STREAM_MAX_FPS=10

# Keepalive del stream (milisegundos)
STREAM_KEEPALIVE_MS=250

# Guardar frames anotados en disco (útil para debugging)
SAVE_ANNOTATED_FRAMES=false

# Directorio para guardar frames anotados (si está habilitado)
ANNOTATED_FRAMES_DIR=logs/annotated_frames

# ====================================================================
# NOTAS DE USO
# ====================================================================
# 
# 1. Para usar YOLOv8 (por defecto):
#    MODEL_TYPE=yolov8
#    MODEL_PATH=weights/best.pt  # tu modelo entrenado
#
# 2. Para usar RT-DETR:
#    MODEL_TYPE=rtdetr
#    MODEL_PATH=weights/rtdetr_best.pt  # tu modelo RT-DETR entrenado
#
# 3. Para usar RF-DETR pre-entrenado de Roboflow (COCO):
#    MODEL_TYPE=rfdetr
#    RFDETR_VARIANT=base  # o nano, small, medium
#    # No necesitas MODEL_PATH, usa checkpoint de Roboflow
#
# 4. Para usar RF-DETR con tus pesos personalizados:
#    MODEL_TYPE=rfdetr
#    RFDETR_VARIANT=base
#    MODEL_PATH=weights/rfdetr_custom.pt  # tus pesos fine-tuned
#
# ====================================================================
# INSTALACIÓN DE DEPENDENCIAS
# ====================================================================
#
# Para YOLOv8/RT-DETR:
#   pip install ultralytics
#
# Para RF-DETR:
#   pip install rfdetr
#
# Para ambos:
#   pip install ultralytics rfdetr
#
# ====================================================================
